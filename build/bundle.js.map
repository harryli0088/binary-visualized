{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/NumberAndLabel.svelte","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte/motion/index.mjs","../../src/utils/getPlaceValue.ts","../../src/Dial.svelte","../../src/utils/constants.ts","../../src/Odometer.svelte","../../src/utils/roundToNearest.ts","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.37.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\n  export let label: string = \"\"\n\texport let value: number = 0\n</script>\n\n<main>\n\t<span><b>{value}</b> {label}{value===\"1\" ? \"\" : \"s\"}</span>\n</main>\n\n<style>\n  main {\n    display: inline-block;\n  }\n</style>\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from '../store/index.mjs';\nimport { now, loop, assign } from '../internal/index.mjs';\nimport { linear } from '../easing/index.mjs';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value) {\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        }\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled) {\n                    task = null;\n                }\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        if (duration === 0) {\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","/**\n * Get the place value from a number\n * Ex if the number is 123, and the place is tens, return 2\n * @param  number ie 123\n * @param  factor ie 10\n * @param  base   ie 10\n * @return        ie 2\n */\nexport default function getPlaceValue(number, factor, base) {\n    return Math.floor(number / factor) % base;\n}\n","<script lang=\"ts\">\n\timport { cubicOut } from 'svelte/easing'\n\timport { tweened } from 'svelte/motion'\n\timport { DIAL_HEIGHT, DIAL_WIDTH } from './utils/constants'\n\timport getPlaceValue from \"./utils/getPlaceValue\"\n\n\texport let base: number = 10\n\texport let digits: string[] = []\n\texport let setValue: (difference: number) => void = () => {}\n\texport let value: number = 0 //the value tracked by this dial\n\n\t$: numDigits = digits.length\n\n\tlet prevValue = value //track the previous value\n\t$: {\n\t\tif(prevValue !== value) { //if the value changed\n\t\t\tmyValue.set( //update my value\n\t\t\t\tvalue,\n\t\t\t\t(\n\t\t\t\t\t//if the place values are the same, set myValue without any duration\n\t\t\t\t\t//this prevents undesired animation when a higher magnitude dial changes\n\t\t\t\t\tgetPlaceValue(prevValue, 1, base) === getPlaceValue(value, 1, base)\n\t\t\t\t\t? {duration: 0} : undefined\n\t\t\t\t)\n\t\t\t)\n\t\t}\n    prevValue = value //set the new previous value\n  }\n\n\tconst myValue = tweened(value, {\n    duration: 500,\n    easing: cubicOut\n  })\n\n\tlet startClientY: number = -1\n\tconst dialIsMoving = () => startClientY >= 0\n\n\tlet startValue: number = -1\n\tfunction handleMousedown(e) {\n\t\tstartDial(e.clientY)\n\t}\n\tfunction handleTouchstart(e) {\n    e.preventDefault()\n    startDial(e.touches[0].clientY)\n  }\n\tfunction startDial(clientY: number) {\n\t\t//record info to start changing this dial\n\t\tstartClientY = clientY\n\t\tstartValue = $myValue\n\t}\n\n\tfunction handleMousemove(e) {\n\t\tmoveDial(e.clientY)\n\t}\n  function handleTouchmove(e) {\n    if(dialIsMoving()) { //if we should move\n      e.preventDefault()\n      moveDial(e.touches[0].clientY)\n    }\n  }\n\tfunction moveDial(clientY: number) {\n\t\tif(dialIsMoving()) { //if we are changing this dial\n\t\t\tmyValue.set(startValue + 1.5*(startClientY - clientY) / DIAL_HEIGHT, {duration: 0})\n\t\t}\n\t}\n\n\tfunction handleDialEnd(e) {\n\t\tif(dialIsMoving()) { //if we are done changing this dial\n\t\t\tmyValue.set(Math.round($myValue)) //force the dial to the closest integer\n\t\t\tsetValue($myValue - startValue) //pass the difference to the set value prop\n\n\t\t\t//mark that we are done changing this dial\n\t\t\tstartClientY = -1\n\t\t\tstartValue = -1\n\t\t}\n\t}\n\n\t$: getTopvalue = (index: number, isAbove: boolean) => {\n\t\tlet logicalValue = (index - $myValue) % numDigits\n\n\t\t//we duplicate the values because in the case of binary\n\t\t//if the selected value is 0, we want to see 1s above and below\n\t\tif(isAbove) { //in the case of binad\n\t\t\tlogicalValue += numDigits\n\t\t}\n\n\t\t//if this digit is too far ahead, wrap it to the back\n\t\tif(logicalValue > numDigits) {\n\t\t\tlogicalValue -= 2*numDigits\n\t\t}\n\n\t\treturn logicalValue * DIAL_HEIGHT + DIAL_HEIGHT/2\n\t}\n\t$: getDialClass = (index: number) => {\n\t\tlet className = 'dial-value'\n\t\tif(index === 0) className += ' top-bound'\n\t\tif(index === numDigits-1) className += ' bottom-bound'\n\t\treturn className\n\t}\n</script>\n\n<main style=\"--dial-width:{DIAL_WIDTH}px;--dial-height:{DIAL_HEIGHT}px\">\n\t<div\n\t\tclass=\"dial-container\"\n\t\ton:mousedown={handleMousedown}\n\t\ton:mousemove={handleMousemove}\n\t\ton:mouseleave={handleDialEnd}\n\t\ton:mouseout={handleDialEnd}\n\t\ton:mouseup={handleDialEnd}\n\t\ton:touchstart={handleTouchstart}\n    on:touchmove={handleTouchmove}\n    on:touchend={handleDialEnd}\n\t>\n\t\t{#each digits as d, i}\n\t\t\t<div class={getDialClass(i)} style={`top:${getTopvalue(i, false)}px;`}>{d}</div>\n\t\t\t<div class={getDialClass(i)} style={`top:${getTopvalue(i, true)}px;`}>{d}</div>\n\t\t{/each}\n\t</div>\n</main>\n\n<style>\n\tmain {\n\t}\n\n\t.dial-container {\n\t\tposition: relative;\n\n\t\tborder: 1px solid gray;\n\t\tcursor: pointer;\n\t\theight: calc(2 * var(--dial-height));\n\t\toverflow-y: hidden;\n\t\twidth: var(--dial-width);\n\t}\n\n\t.dial-value {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\n\t\tposition: absolute;\n\t\tleft: 0;\n\n\t\tborder-bottom: 1px solid #ddd;\n\t\tborder-top: 1px solid #ddd;\n\t\tfont-weight: bold;\n\t\theight: var(--dial-height);\n\t\tuser-select: none;\n\t\ttext-align: center;\n\t\twidth: 100%;\n\t}\n\t.top-bound {\n\t\tborder-top-color: #EC7063;\n\t}\n\t.bottom-bound {\n\t\tborder-bottom-color: #EC7063;\n\t}\n </style>\n","export const DIAL_HEIGHT = 75;\nexport const DIAL_WIDTH = 50;\n","<script lang=\"ts\">\n\timport Dial from './Dial.svelte';\n  import { DIAL_WIDTH } from './utils/constants'\n  import roundToNearest from \"./utils/roundToNearest\"\n\n  export let base: number = 10\n  export let initialValue: number = 0\n  export let label: string = \"\"\n  export let places: number = 1\n  export let showDecimalValue: boolean = true\n\texport let value = initialValue\n\n  $: getDialValue = (factor) => {\n    //Each dial needs to track its value and the values of the dials above it,\n    //which is necessary to have smooth animations when we wrap around start and end digits:\n    //ie between 9 and 0 in base ten.\n    //Also floor the value into an integer to avoid intermediate dial positions.\n    return Math.floor(value / factor)\n  }\n  function makeSetValueFunction(factor: number) {\n    return (\n      (difference: number) => {\n  \t\t\tvalue += roundToNearest(factor*difference, factor)\n      }\n    )\n  }\n\n  $:digits = Array.from(Array(base).keys()).map(d => d.toString(base).toUpperCase())\n  $:factors = Array(places).fill(0).map((_, i) => Math.pow(base, i))\n</script>\n\n<main style=\"--dial-width:{DIAL_WIDTH}px\">\n\t<h3>{label} Odometer</h3>\n\t<div class=\"odometer-container\">\n    <div class=\"odometer\">\n      {#each factors as factor, i}\n        <Dial\n          {base}\n          {digits}\n          setValue={makeSetValueFunction(factor)}\n          value={getDialValue(factor)}\n        />\n      {/each}\n\n      <div class=\"pointer left\">▶</div>\n      <div class=\"pointer right\">◀</div>\n    </div>\n  </div>\n  <div class=\"places-container\">\n    {#each factors as factor, i}\n      <div class=\"place\">{factor}</div>\n    {/each}\n  </div>\n\n\t<br/>\n\n\t<div><b>{label} Value:</b> {value.toString(base).toUpperCase()}</div>\n  {#if showDecimalValue}\n    <div>(<b>Decimal Value:</b> {value.toString()})</div>\n  {/if}\n\n\t<div>\n    <button on:click={() => value ++}>Increment Value</button>\n  </div>\n</main>\n\n<style>\n\tmain {\n    text-align: center;\n\t}\n\n  .odometer {\n    display: flex;\n    flex-direction: row-reverse;\n\n    position: relative;\n    border: 3px solid gray;\n    box-shadow: inset 0px 10px 10px #555, inset 0px -10px 10px #555;\n  }\n  .odometer-container {\n    display: flex;\n    justify-content: center;\n  }\n\n  .pointer {\n    color: red;\n    position: absolute;\n    top: 50%;\n  }\n  .left {\n    left: -2px;\n    transform: translate(-100%, -50%);\n  }\n  .right {\n    right: -3px;\n    transform: translate(100%, -50%);\n  }\n\n  .place {\n    color: gray;\n    font-weight: bold;\n    width: var(--dial-width);\n  }\n  .places-container {\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: center;\n    justify-content: center;\n  }\n\n  button {\n    margin-top: 0.5em;\n  }\n</style>\n","/**\n * round the given value to the cloest multiple of nearest\n * @param  value   value to be rounded\n * @param  nearest nearest multiple-of to be rounded to\n * @return         rounded value\n */\nexport default function roundToNearest(value, nearest) {\n    return nearest * Math.round(value / nearest);\n}\n","<script lang=\"ts\">\n\timport NumberAndLabel from './NumberAndLabel.svelte';\n\timport Odometer from './Odometer.svelte';\n\n\tconst now = new Date()\n\tlet globalValue: number = 1234\n\t$:globalValueString = globalValue.toString()\n</script>\n\n<main style=\"--tablet-padding:calc(50vw - 300px + 1em);--desktop-padding:calc(50vw - 400px)\">\n\t<header>\n\t\t<div id=\"img-container\">\n\t\t\t<img src=\"img/nathan-lindahl-tX9A5DQHDC4-unsplash.jpg\" alt=\"cat\"/>\n\t\t\t<div id=\"source\">Photo by <a href=\"https://unsplash.com/@hip_dinosaur?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Nathan Lindahl</a> on <a href=\"https://unsplash.com/s/photos/dashboard?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a></div>\n\t\t</div>\n\n\t\t<div id=\"heading\">\n\t\t\t<h1>Binary Visualized</h1>\n\t\t\t<p id=\"sub-heading\">How car odometers can teach us to count in binary</p>\n\t\t\t<div>\n\t\t\t\t<a href=\"https://github.com/harryli0088/binary-visualized\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"img/github.svg\" alt=\"github logo\"/></a>\n\t\t\t</div>\n\t\t</div>\n\t</header>\n\n\t<section>\n\t\t<p>Counting in binary can seem tricky but is actually quite straightforward!</p>\n\t\t<p>On a daily basis, we use a <b>base-ten</b> counting system, ie</p>\n\t\t<ul>\n\t\t\t<li>I have $20</li>\n\t\t\t<li>I am 35-years-old</li>\n\t\t\t<li>This year is {now.getFullYear()}</li>\n\t\t</ul>\n\t\t<p><b>Base-ten</b> simply means that we have ten symbols available to use for counting, ie 0, 1, 2, 3, 4, 5, 6, 7, 8, 9. When we get to the number <b>ten</b>, we don't have a dedicated symbol. Instead, we combine two symbols <b>1</b> and <b>0</b> to represent the number <b>10</b>.</p>\n\t\t<p>Odometers (like the one in your '95 Toyota Camery) use rotating dials to represent multi-digit numbers. Try rotating the right-most dial and see how it behaves! What happens when you increment from nine to ten?</p>\n\t\t<Odometer base={10} initialValue={0} places={2} showDecimalValue={false}/>\n\t\t<p>When we ran out of symbols in the <b>ones</b> place, we incremented the symbol in the <b>tens</b> place from 0 to 1. We also made a full revolution in the ones place from 9 back to 0.</p>\n\t\t<Odometer base={10} initialValue={globalValue} places={4} showDecimalValue={false} bind:value={globalValue}/>\n\t\t<p>Notice that in base-<i>ten</i>, each subsequent dial on the left represents a higher power of <i>ten</i>. In this case, the number <b>{globalValue}</b> represents <NumberAndLabel label=\"thousand\" value={globalValueString[0]}/>, <NumberAndLabel label=\"hundred\" value={globalValueString[1]}/>, <NumberAndLabel label=\"ten\" value={globalValueString[2]}/>, and <NumberAndLabel label=\"one\" value={globalValueString[3]}/>. Instead of coming up with infinite symbols to represent every number (❄︎, 🍕, ﬗ, <span style=\"font-size: 1.5em\">🦝</span>, ...), we only use ten. When we run out of symbols in one place, we increment the symbol in the next place.</p>\n\t</section>\n\n\t<section>\n\t\t<h2>What is Binary?</h2>\n\t\t<p>Unlike our regular base-ten (aka <b>decimal</b>) counting system, base-two (aka <b>binary</b>) only has two symbols - 0 and 1 - which are useful in electronics to represent low and high voltage. At first, binary seems a little funny compared to what we're used to. For example, the number 9 is represented in binary as <b>1001</b>. This is because binary only has two symbols and has to start using its higher dials much earlier.</p>\n\t\t<Odometer base={2} initialValue={0} label=\"Binary\" places={5}/>\n\t\t<p>In decimal, each subsequent place represents a higher power of ten. Similarly, in binary, each subsequent place represents a higher power of two. When converting from binary to decimal, you can simply add the powers of 2. Here are some examples:</p>\n\n\t\t<div>\n\t\t\t<table>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Binary</th>\n\t\t\t\t\t\t<th>Decimal</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td><b>1</b></td>\n\t\t\t\t\t\t<td><b>1</b></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td><b>10</b></td>\n\t\t\t\t\t\t<td>2 + 0 = <b>2</b></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td><b>11</b></td>\n\t\t\t\t\t\t<td> 2 + 1 = <b>3</b></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td><b>100</b></td>\n\t\t\t\t\t\t<td>4 + 0 + 0 = <b>4</b></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td><b>101</b></td>\n\t\t\t\t\t\t<td> 4 + 0 + 1 = <b>5</b></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td><b>110</b></td>\n\t\t\t\t\t\t<td> 4 + 2 + 0 = <b>6</b></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td><b>111</b></td>\n\t\t\t\t\t\t<td> 4 + 2 + 1 = <b>7</b></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>...</td>\n\t\t\t\t\t\t<td>...</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td><b>1111</b></td>\n\t\t\t\t\t\t<td> 8 + 4 + 2 + 1 = <b>15</b></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</section>\n\n\t<section>\n\t\t<h2>Other Counting Systems</h2>\n\t\t<p>In theory, you could arbitrarily decide to count in any base you wanted, say base-twenty seven million. In practice, there are only two other commonly used counting systems. The first is base-eight (aka <b>octal</b>):</p>\n\t\t<Odometer base={8} initialValue={0} label=\"Octal\" places={4}/>\n\n\t\t<p>The second is base-sixteen (aka <b>hexadecimal</b>), which uses symbols A, B, C, D, E and F to represent values 10, 11, 12, 14, and 15:</p>\n\t\t<Odometer base={16} initialValue={43981} label=\"Hexadecimal\" places={4}/>\n\t</section>\n\n\t<section>\n\t\t<h2>Closing Thoughts</h2>\n\t\t<p>I had trouble learning binary at first because I had been so used to counting in decimal. In my mind, base-ten was the <i>only</i> base; there was just no other way to count. It was difficult to let go of my limited perspective and instead see that base-ten is just one of many counting systems. To me, the most important part of learning binary is learning how to generalize a narrow perspective into broader understanding.</p>\n\t</section>\n\n\t<footer>\n\t\t<p>Built using <a href=\"https://svelte.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">Svelte</a> and <a href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Typescript</a></p>\n\t\t<p>Github Repo: <a href=\"https://github.com/harryli0088/binary-visualized\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/harryli0088/binary-visualized</a></p>\n\t</footer>\n</main>\n\n<style>\n\tmain {\n\t}\n\n\theader, section, footer {\n\t\tpadding: 1em;\n\t}\n\t@media only screen and (min-width: 600px) {\n\t\theader, section, footer {\n\t\t\tpadding-left: var(--tablet-padding);\n\t\t\tpadding-right: var(--tablet-padding);\n\t\t}\n\t}\n\t@media only screen and (min-width: 1000px) {\n\t\theader, section, footer {\n\t\t\tpadding-left: var(--desktop-padding);\n\t\t\tpadding-right: var(--desktop-padding);\n\t\t}\n\t}\n\n\theader {\n\t\tdisplay: flex;\n\t\tflex-direction: column-reverse;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\toverflow: hidden;\n\t\tbackground-color: #17202A;\n\t\tcolor: white;\n\t}\n\t@media only screen and (min-width: 600px) {\n\t\theader {\n\t\t\theight: 50vh;\n\t\t\tflex-direction: row;\n\t\t}\n\t}\n\t@media only screen and (min-width: 1000px) {\n\t\theader {\n\t\t\theight: 70vh;\n\t\t}\n\t}\n\n\n\t/*** start section for heading responsive styling ***/\n\t#heading {\n\t\ttext-align: center;\n\t\tpadding-bottom: 1em;\n\t}\n\t@media only screen and (min-width: 600px) {\n\t\t#img-container {\n\t\t\twidth: 50%;\n\t\t\tpadding-right: 1em;\n\t\t}\n\t\t#heading {\n\t\t\twidth: 50%;\n\t\t\tpadding: 0;\n\t\t\tpadding-left: 1em;\n\t\t\ttext-align: left;\n\t\t}\n\t}\n\t/*** end section ***/\n\n\t#img-container img {\n\t\twidth: 100%;\n\t\tbox-shadow: 0 0 5px rgba(0,0,0,0.1);\n\t}\n\n\t#source {\n\t\ttext-align: center;\n\t\tfont-size: 0.7em;\n\t\tfont-style: italic;\n\t\tcolor: #bbb;\n\t}\n\n\t#heading h1 {\n\t\tline-height: 1.25em;\n\t}\n\n\t#sub-heading {\n\t\tfont-style: italic;\n\t}\n\n\t#heading a img {\n\t\twidth: 1.75em;\n\t\theight: 1.75em;\n\t\ttransition: 0.5s;\n\t}\n\t#heading a img:hover {\n\t\ttransform: scale(1.25);\n\t}\n\n\ttable {\n\t\tmargin: auto;\n\t}\n\n\tthead tr {\n\t\tbackground-color: #D6EAF8;\n\t}\n\n\tth {\n\t\ttext-align: left;\n\t\tpadding-left: 1em;\n\t\tpadding-right: 1em;\n\t}\n\n\ttbody tr:nth-child(odd) {\n\t\tbackground-color: #eee;\n\t}\n\n\ttd {\n\t\ttext-align: right;\n\t\tpadding-left: 1em;\n\t\tpadding-right: 1em;\n\t\tfont-family: monospace;\n\t}\n\n\tfooter {\n\t\tbackground-color: #ddd;\n\t}\n</style>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","null_to_empty","value","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","transition_out","o","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","label","cubicOut","t","subscriber_queue","is_date","prototype","toString","call","get_interpolator","isArray","Error","arr","bi","getTime","delta","interpolators","result","tweened","defaults","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","writable","target_value","opts","previous_task","started","delay","duration","easing","linear","interpolate","abort","promise","fulfill","loop","elapsed","getPlaceValue","number","factor","base","Math","floor","DIAL_WIDTH","DIAL_HEIGHT","digits","setValue","prevValue","myValue","startClientY","dialIsMoving","startValue","startDial","clientY","$myValue","moveDial","numDigits","undefined","getTopvalue","isAbove","logicalValue","getDialClass","className","e","preventDefault","touches","round","toUpperCase","r","initialValue","places","showDecimalValue","getDialValue","factors","_","pow","difference","nearest","roundToNearest","getFullYear","globalValue","globalValueString","body"],"mappings":"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"}